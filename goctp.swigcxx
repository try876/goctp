/* Copyright 2011 The Go Authors.  All rights reserved.
   Use of this source code is governed by a BSD-style
   license that can be found in the LICENSE file.  */

/* An example of writing a C++ virtual function in Go.  */

%module(directors="1") goctp

%init %{ 
  //printf("Initialization qerio.goctp done.\n");
%}
 

/* 在复杂的企业环境中，可能有一些 C/C++ 头文件定义了您希望向脚本框架公开的全局变量和常量。
 * 在接口文件中使用 %include <header.h> 和 %{ #include <header.h> %}，可解决在头文件中重复所有元素的声明的问题。
 * 有一点值得注意，在MSVC中，32位环境（当然是说跑的Intel 兼容CPU的PC）预定义宏_WIN32，但64位环境同时预定义了_WIN32和_WIN64。
 */

/* Includes the header files in the wrapper code */
%header %{
#include "./api/linux64/ThostFtdcUserApiDataType.h" 
#include "./api/linux64/ThostFtdcUserApiStruct.h"
#include "./api/linux64/ThostFtdcMdApi.h"
#include "./api/linux64/ThostFtdcTraderApi.h"
#include "./api/linux64/DataCollect.h"
%}

/* Parse the header files to generate wrappers */
%include "std_string.i"

%feature("director") CThostFtdcMdSpi;
%feature("director") CThostFtdcTraderSpi;

%include "./api/linux64/ThostFtdcUserApiDataType.h" 
%include "./api/linux64/ThostFtdcUserApiStruct.h"
%include "./api/linux64/ThostFtdcMdApi.h"
%include "./api/linux64/ThostFtdcTraderApi.h"
%include "./api/linux64/DataCollect.h"
